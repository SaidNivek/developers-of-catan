@url = http://localhost:8080/api/reviews

### GET - successful get all reviews - 200 
GET {{url}} HTTP/1.1

### GET - successful get all reviews by game id - 200
GET {{url}}/game/1 HTTP/1.1

### GET - successful get - bad id, nothing in list - 200
GET {{url}}/game/0 HTTP/1.1

### GET - failed get - bad path - 404
GET {{url}}/game HTTP/1.1

### GET - successful get review by review id
GET {{url}}/review/1 HTTP/1.1

### GET - failed get - bad id - 400
GET {{url}}/review/1000 HTTP/1.1

### GET - failed get - no id - 404
GET {{url}}/review/ HTTP/1.1

### DELETE - successful delete - admin can delete any reviews- 204
DELETE {{url}}/2/1 HTTP/1.1

### DELETE - failed delete - cannot delete if it doesn't exist (run this after above)
DELETE {{url}}/2/1 HTTP/1.1

### DELETE - failed delete - user cannot delete other user reviews
DELETE {{url}}/2/4 HTTP/1.1

### POST - Happy path 

POST {{url}}/review HTTP/1.1
Content-Type: application/json

{   
    "userId": 1,
    "gameId": 3,
    "text": "Testing text",
    "rating": 8
}

### POST - Unhappy path: null text

POST {{url}}/review HTTP/1.1
Content-Type: application/json

{   
    "userId": 1,
    "gameId": 2,
    "text": "",
    "rating": 8
}

### POST - Unhappy path: Duplicate values

POST {{url}}/review HTTP/1.1
Content-Type: application/json

{
    "userId": 1,
    "gameId": 1,
    "text": "I loved this game!",
    "rating": 10
}

### POST - Unhappy path: Non existent game

POST {{url}}/review HTTP/1.1
Content-Type: application/json

{
    "userId": 1,
    "gameId": 9,
    "text": "I loved this game!",
    "rating": 10
}

### POST - Unhappy path: Rating is negative

POST {{url}}/review HTTP/1.1
Content-Type: application/json

{   
    "userId": 1,
    "gameId": 2,
    "text": "Testing text",
    "rating": -12
}

### POST - Unhappy path: Rating > 10

POST {{url}}/review HTTP/1.1
Content-Type: application/json

{   
    "userId": 1,
    "gameId": 2,
    "text": "Testing text",
    "rating": 14
}

### PUT - Happy path

PUT {{url}}/1/1 HTTP/1.1
Content-Type: application/json

{   
    "reviewId": 1,
    "userId": 1,
    "gameId": 1,
    "text": "Updated test",
    "rating": 5
}

### PUT - Unhappy Path (User can only update their own review)

PUT {{url}}/3/1 HTTP/1.1
Content-Type: application/json

{   
    "text": "Updated test",
    "rating": 5
}

### PUT - Unhappy Path: Empty String

PUT {{url}}/5/3 HTTP/1.1
Content-Type: application/json

{   
    "reviewId": 5,
    "userId": 3,
    "gameId": 1,
    "text": "",
    "rating": 5
}

### PUT - Unhappy Path: Out of Bound rating

PUT {{url}}/5/3 HTTP/1.1
Content-Type: application/json

{   
    "reviewId": 5,
    "userId": 3,
    "gameId": 1,
    "text": "Updated test",
    "rating": 11
}
